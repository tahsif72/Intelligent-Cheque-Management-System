  CREATE TABLE "OEHR_COUNTRIES" 
   (	"COUNTRY_ID" CHAR(2) CONSTRAINT "OEHR_COUNTRY_ID_NN" NOT NULL ENABLE, 
	"COUNTRY_NAME" VARCHAR2(40), 
	"REGION_ID" NUMBER, 
	 CONSTRAINT "OEHR_COUNTRY_C_ID_PK" PRIMARY KEY ("COUNTRY_ID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS ;

  CREATE TABLE "OEHR_EMPLOYEES" 
   (	"EMPLOYEE_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 207 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(20), 
	"LAST_NAME" VARCHAR2(25) CONSTRAINT "OEHR_EMP_LAST_NAME_NN" NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(25) CONSTRAINT "OEHR_EMP_EMAIL_NN" NOT NULL ENABLE, 
	"PHONE_NUMBER" VARCHAR2(20), 
	"HIRE_DATE" DATE CONSTRAINT "OEHR_EMP_HIRE_DATE_NN" NOT NULL ENABLE, 
	"JOB_ID" VARCHAR2(10), 
	"SALARY" NUMBER(8,2), 
	"COMMISSION_PCT" NUMBER(2,2), 
	"MANAGER_ID" NUMBER(6,0), 
	"DEPARTMENT_ID" NUMBER(4,0), 
	"PHOTO" BLOB, 
	"FILENAME" VARCHAR2(1000), 
	"MIME_TYPE" VARCHAR2(100), 
	 CONSTRAINT "OEHR_EMP_SALARY_MIN" CHECK (salary > 0) ENABLE, 
	 CONSTRAINT "OEHR_EMP_EMP_ID_PK" PRIMARY KEY ("EMPLOYEE_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "OEHR_EMP_EMAIL_UK" UNIQUE ("EMAIL")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "ACC_TYP" 
   (	"TYP_ID" VARCHAR2(3), 
	"TYP_NM" VARCHAR2(50) CONSTRAINT "ACC_TYP_TYP_NM_NN" NOT NULL ENABLE, 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "ACC_TYP_TYP_ID_PK" PRIMARY KEY ("TYP_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "ACC_TYP_TYP_NM_UK" UNIQUE ("TYP_NM")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "BANK" 
   (	"BNK_ID" VARCHAR2(3), 
	"BNK_NM" VARCHAR2(50) CONSTRAINT "BANK_BNK_NM_NN" NOT NULL ENABLE, 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	"ADR" VARCHAR2(120), 
	"EMAIL" VARCHAR2(90), 
	"PHN" VARCHAR2(80), 
	 CONSTRAINT "BANK_BNK_ID_PK" PRIMARY KEY ("BNK_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "BRANCH" 
   (	"BRN_ID" VARCHAR2(3), 
	"BNK_ID" VARCHAR2(3), 
	"BRN_NM" VARCHAR2(50) CONSTRAINT "BRANCH_BRN_NM_NN" NOT NULL ENABLE, 
	"RUT_NO" VARCHAR2(15), 
	"SFT_CD" VARCHAR2(15), 
	"MOBILE" VARCHAR2(70), 
	"EMAIL" VARCHAR2(50), 
	"ADRS" VARCHAR2(100), 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "BRANCH_BRN_ID_PK" PRIMARY KEY ("BRN_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "BRANCH_BRN_NM_UK" UNIQUE ("BRN_NM")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "CHQ_DATA" 
   (	"CHQ_ID" VARCHAR2(9), 
	"BNK_ID" VARCHAR2(3), 
	"CHQ_DT" DATE DEFAULT SYSDATE, 
	"CHQ_NO" VARCHAR2(15) CONSTRAINT "CHQ_DETA_CHQ_NO_NN" NOT NULL ENABLE, 
	"PAYE_ID" VARCHAR2(50), 
	"AMT" NUMBER CONSTRAINT "CHQ_DETA_AMT_NN" NOT NULL ENABLE, 
	"PAT_ID" VARCHAR2(2), 
	"STAT_ID" VARCHAR2(3), 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	"BOUNCE_STOP_REMARKS" VARCHAR2(200), 
	"BOUNCE_STOP_DATE" DATE, 
	"AC_NO" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "CHQ_DATA_CHQ_ID_PK" PRIMARY KEY ("CHQ_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "CHQ_PAT" 
   (	"PAT_ID" VARCHAR2(3), 
	"PAT_NM" VARCHAR2(50) CONSTRAINT "CHQ_PAT_PAT_NM_NN" NOT NULL ENABLE, 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "CHQ_PAT_PAT_ID_PK" PRIMARY KEY ("PAT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "CHQ_REG" 
   (	"REG_ID" NUMBER, 
	"BNK_ID" VARCHAR2(3), 
	"TYP_ID" VARCHAR2(2), 
	"ISU_DATE" DATE DEFAULT SYSDATE, 
	"AC_NO" VARCHAR2(50), 
	"CHQ_SL_ST" VARCHAR2(50) CONSTRAINT "CHQ_REG_SL_ST_NN" NOT NULL ENABLE, 
	"CHQ_SL_ED" VARCHAR2(50) CONSTRAINT "CHQ_REG_SL_ED_NN" NOT NULL ENABLE, 
	"ACTION_USER" VARCHAR2(50), 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "CHQ_REG_REG_ID_PK" PRIMARY KEY ("REG_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "CHQ_REG_DET" 
   (	"REG_ID" NUMBER NOT NULL ENABLE, 
	"CHQ_NO" VARCHAR2(50) NOT NULL ENABLE, 
	"CHQ_DT" DATE, 
	"PAYE_ID" VARCHAR2(5), 
	"AMOUNT" NUMBER(18,2), 
	"STAT_ID" VARCHAR2(3), 
	"ACTION_USER" VARCHAR2(100), 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE
   ) ;

  CREATE TABLE "CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER, 
	"CUSTOMER_NAME" VARCHAR2(100) NOT NULL ENABLE, 
	"PHONE" VARCHAR2(20), 
	"EMAIL" VARCHAR2(100), 
	"ADDRESS" VARCHAR2(100), 
	"CREATED_BY" VARCHAR2(50), 
	"CREATED_DATE" DATE DEFAULT SYSDATE, 
	 PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 996 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CUST_FIRST_NAME" VARCHAR2(20) CONSTRAINT "CUST_FNAME_NN" NOT NULL ENABLE, 
	"CUST_LAST_NAME" VARCHAR2(20) CONSTRAINT "CUST_LNAME_NN" NOT NULL ENABLE, 
	"STREET_ADDRESS" VARCHAR2(40), 
	"POSTAL_CODE" VARCHAR2(10), 
	"CITY" VARCHAR2(30), 
	"STATE_PROVINCE" VARCHAR2(10), 
	"COUNTRY_ID" CHAR(2), 
	"PHONE_NUMBER" VARCHAR2(25), 
	"NLS_LANGUAGE" VARCHAR2(3), 
	"NLS_TERRITORY" VARCHAR2(30), 
	"CREDIT_LIMIT" NUMBER(9,2), 
	"CUST_EMAIL" VARCHAR2(30), 
	"ACCOUNT_MGR_ID" NUMBER(6,0), 
	 CONSTRAINT "OEHR_CUST_CL_MAX" CHECK (credit_limit <= 5000) ENABLE, 
	 CONSTRAINT "OEHR_CUSTOMER_ID_MIN" CHECK (customer_id > 0) ENABLE, 
	 CONSTRAINT "OEHR_CUSTOMERS_PK" PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_DEPARTMENTS" 
   (	"DEPARTMENT_ID" NUMBER(4,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9990 INCREMENT BY 10 START WITH 280 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DEPARTMENT_NAME" VARCHAR2(30) CONSTRAINT "OEHR_DEPT_NAME_NN" NOT NULL ENABLE, 
	"MANAGER_ID" NUMBER(6,0), 
	"LOCATION_ID" NUMBER(4,0), 
	 CONSTRAINT "OEHR_DEPT_ID_PK" PRIMARY KEY ("DEPARTMENT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_EMP_SALARY_HISTORY" 
   (	"EMPLOYEE_ID" NUMBER, 
	"NEW_SALARY" NUMBER, 
	"OLD_SALARY" NUMBER, 
	"UPDATE_COUNT" NUMBER, 
	"UPDATED_DATE" DATE, 
	"UPDATED_BY" VARCHAR2(100)
   ) ;

  CREATE TABLE "OEHR_INVENTORIES" 
   (	"PRODUCT_ID" NUMBER(6,0), 
	"WAREHOUSE_ID" NUMBER(3,0) CONSTRAINT "OEHR_INVENTORY_WAREHOUSE_ID_NN" NOT NULL ENABLE, 
	"QUANTITY_ON_HAND" NUMBER(8,0) CONSTRAINT "OEHR_INVENTORY_QOH_NN" NOT NULL ENABLE, 
	 CONSTRAINT "OEHR_INVENTORY_PK" PRIMARY KEY ("PRODUCT_ID", "WAREHOUSE_ID") DISABLE
   ) ;

  CREATE TABLE "OEHR_JOBS" 
   (	"JOB_ID" VARCHAR2(10), 
	"JOB_TITLE" VARCHAR2(35) CONSTRAINT "OEHR_JOB_TITLE_NN" NOT NULL ENABLE, 
	"MIN_SALARY" NUMBER(6,0), 
	"MAX_SALARY" NUMBER(6,0), 
	 CONSTRAINT "OEHR_JOB_ID_PK" PRIMARY KEY ("JOB_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_JOB_HISTORY" 
   (	"EMPLOYEE_ID" NUMBER(6,0) CONSTRAINT "OEHR_JHIST_EMPLOYEE_NN" NOT NULL ENABLE, 
	"START_DATE" DATE CONSTRAINT "OEHR_JHIST_START_DATE_NN" NOT NULL ENABLE, 
	"END_DATE" DATE CONSTRAINT "OEHR_JHIST_END_DATE_NN" NOT NULL ENABLE, 
	"JOB_ID" VARCHAR2(10) CONSTRAINT "OEHR_JHIST_JOB_NN" NOT NULL ENABLE, 
	"DEPARTMENT_ID" NUMBER(4,0), 
	 CONSTRAINT "OEHR_JHIST_DATE_INTERVAL" CHECK (end_date >= start_date) ENABLE
   ) ;

  CREATE TABLE "OEHR_LOCATIONS" 
   (	"LOCATION_ID" NUMBER(4,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9900 INCREMENT BY 100 START WITH 3300 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"STREET_ADDRESS" VARCHAR2(40), 
	"POSTAL_CODE" VARCHAR2(12), 
	"CITY" VARCHAR2(30) CONSTRAINT "OEHR_LOC_CITY_NN" NOT NULL ENABLE, 
	"STATE_PROVINCE" VARCHAR2(25), 
	"COUNTRY_ID" CHAR(2), 
	 CONSTRAINT "OEHR_LOC_ID_PK" PRIMARY KEY ("LOCATION_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_ORDERS" 
   (	"ORDER_ID" NUMBER(12,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2460 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ORDER_DATE" TIMESTAMP (6) WITH TIME ZONE CONSTRAINT "ORDER_DATE_NN" NOT NULL ENABLE, 
	"ORDER_MODE" VARCHAR2(8), 
	"CUSTOMER_ID" NUMBER(6,0) CONSTRAINT "OEHR_ORDER_CUSTOMER_ID_NN" NOT NULL ENABLE, 
	"ORDER_STATUS" NUMBER(2,0), 
	"ORDER_TOTAL" NUMBER(8,2), 
	"SALES_REP_ID" NUMBER(6,0), 
	"PROMOTION_ID" NUMBER(6,0), 
	 CONSTRAINT "OEHR_ORDER_MODE_LOV" CHECK (order_mode in ('direct','online')) ENABLE, 
	 CONSTRAINT "OEHR_ORDER_TOTAL_MIN" CHECK (order_total >= 0) ENABLE, 
	 CONSTRAINT "OEHR_ORDER_PK" PRIMARY KEY ("ORDER_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_ORDER_ITEMS" 
   (	"ORDER_ID" NUMBER(12,0), 
	"LINE_ITEM_ID" NUMBER(3,0) CONSTRAINT "ORD_ITEM_LINE_ITEM_NN" NOT NULL ENABLE, 
	"PRODUCT_ID" NUMBER(6,0) CONSTRAINT "ORD_ITEM_PROD_NN" NOT NULL ENABLE, 
	"UNIT_PRICE" NUMBER(8,2), 
	"QUANTITY" NUMBER(8,0), 
	"ORDER_ITEM_ID" NUMBER(12,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 665 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	 CONSTRAINT "OEHR_ORDER_ITEMS_PK" PRIMARY KEY ("ORDER_ITEM_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_PRODUCT_DESCRIPTIONS" 
   (	"PRODUCT_ID" NUMBER(6,0), 
	"LANGUAGE_ID" VARCHAR2(3), 
	"TRANSLATED_NAME" NVARCHAR2(50) CONSTRAINT "OEHR_TRANSLATED_NAME_NN" NOT NULL ENABLE, 
	"TRANSLATED_DESCRIPTION" NVARCHAR2(2000) CONSTRAINT "OEHR_TRANSLATED_DESC_NN" NOT NULL ENABLE, 
	 CONSTRAINT "OEHR_PROD_DESC_PK" PRIMARY KEY ("PRODUCT_ID", "LANGUAGE_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_PRODUCT_INFORMATION" 
   (	"PRODUCT_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 3520 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PRODUCT_NAME" VARCHAR2(50), 
	"PRODUCT_DESCRIPTION" VARCHAR2(2000), 
	"CATEGORY_ID" NUMBER(2,0), 
	"WEIGHT_CLASS" NUMBER(1,0), 
	"WARRANTY_PERIOD" INTERVAL YEAR (2) TO MONTH, 
	"SUPPLIER_ID" NUMBER(6,0), 
	"PRODUCT_STATUS" VARCHAR2(20), 
	"LIST_PRICE" NUMBER(8,2), 
	"MIN_PRICE" NUMBER(8,2), 
	"CATALOG_URL" VARCHAR2(50), 
	 CONSTRAINT "OEHR_PRODUCT_STATUS_LOV" CHECK (product_status in (  'orderable'
                                , 'planned'
                                , 'under development'
                                , 'obsolete')) ENABLE, 
	 CONSTRAINT "OEHR_PRODUCT_INFO_PK" PRIMARY KEY ("PRODUCT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_PROMOTIONS" 
   (	"PROMO_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 3 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PROMO_NAME" VARCHAR2(20), 
	 CONSTRAINT "OEHR_PROMO_ID_PK" PRIMARY KEY ("PROMO_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_REGIONS" 
   (	"REGION_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9900 INCREMENT BY 100 START WITH 3300 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"REGION_NAME" VARCHAR2(25), 
	 CONSTRAINT "OEHR_REG_ID_PK" PRIMARY KEY ("REGION_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_WAREHOUSES" 
   (	"WAREHOUSE_ID" NUMBER(3,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999 INCREMENT BY 1 START WITH 10 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"WAREHOUSE_NAME" VARCHAR2(35), 
	"LOCATION_ID" NUMBER(4,0), 
	 CONSTRAINT "OEHR_WAREHOUSES_PK" PRIMARY KEY ("WAREHOUSE_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "PAYE_AC_DET" 
   (	"PAYE_ID" VARCHAR2(3), 
	"PAYE_BNK_ID" VARCHAR2(3), 
	"AC_TITL" VARCHAR2(40), 
	"BRN" VARCHAR2(40), 
	"PAYE_AC_NO" VARCHAR2(20), 
	"ROUT" VARCHAR2(10), 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE
   ) ;

  CREATE TABLE "PAYE_DET" 
   (	"PAYE_ID" VARCHAR2(3), 
	"PAYE_NM" VARCHAR2(50) CONSTRAINT "PAYE_DET_PAYE_NM_NN" NOT NULL ENABLE, 
	"MOB" VARCHAR2(14), 
	"EMAIL" VARCHAR2(50), 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "PAYE_DET_PAYE_ID_PK" PRIMARY KEY ("PAYE_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "PRODUCTS" 
   (	"PRODUCT_ID" NUMBER, 
	"PRODUCT_NAME" VARCHAR2(100) NOT NULL ENABLE, 
	"CATEGORY" VARCHAR2(50), 
	"UNIT" VARCHAR2(10), 
	"UNIT_PRICE" NUMBER(10,2), 
	"OPENING_QTY" NUMBER(10,2) DEFAULT 0, 
	"CREATED_BY" VARCHAR2(50), 
	"CREATED_DATE" DATE DEFAULT SYSDATE, 
	 CHECK (unit_price >= 0) ENABLE, 
	 PRIMARY KEY ("PRODUCT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "PURCHASE_DTL" 
   (	"PUR_ORDER_DID" NUMBER, 
	"PUR_ORDER_PID" NUMBER, 
	"PRODUCT_ID" VARCHAR2(20), 
	"ITEM_ID" VARCHAR2(20), 
	"CATEGORY_ID" VARCHAR2(20), 
	"QUANTITY" NUMBER, 
	"UNIT_ID" VARCHAR2(20), 
	"UNIT_PRICE" NUMBER, 
	"AMOUNT" NUMBER, 
	"COMPANY_ID" NUMBER, 
	"LOCATION_ID" NUMBER, 
	"ENTRY_BY" VARCHAR2(50), 
	"ENTRY_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_BY" VARCHAR2(50), 
	"UPDATE_DATE" DATE, 
	 CONSTRAINT "PURCHASE_DTL_DID_PK" PRIMARY KEY ("PUR_ORDER_DID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "PURCHASE_MST" 
   (	"PUR_ORDER_PID" NUMBER, 
	"CHALLAN_NO" VARCHAR2(30) NOT NULL ENABLE, 
	"PUR_ORDER_NO" VARCHAR2(30) NOT NULL ENABLE, 
	"PUR_ORDER_DATE" DATE, 
	"SUPP_ID" NUMBER, 
	"PUR_ORDER_TYPE" VARCHAR2(1), 
	"PAYMENT_TYPE" VARCHAR2(5), 
	"REMARKS" VARCHAR2(30), 
	"TOTAL_AMOUNT" NUMBER, 
	"COMPANY_ID" NUMBER, 
	"LOCATION_ID" NUMBER, 
	"ORDER_STATUS" VARCHAR2(1), 
	"ENTRY_BY" VARCHAR2(50), 
	"ENTRY_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_BY" VARCHAR2(50), 
	"UPDATE_DATE" DATE, 
	 CONSTRAINT "PURCHASE_MST_PID_PK" PRIMARY KEY ("PUR_ORDER_PID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "SALES_DETAILS" 
   (	"SALES_DETAIL_ID" NUMBER, 
	"SALES_ID" NUMBER NOT NULL ENABLE, 
	"PRODUCT_ID" NUMBER NOT NULL ENABLE, 
	"UNIT" VARCHAR2(10), 
	"UNIT_PRICE" NUMBER(10,2) NOT NULL ENABLE, 
	"QUANTITY" NUMBER(10,2) NOT NULL ENABLE, 
	"TOTAL_PRICE" NUMBER(12,2) GENERATED ALWAYS AS ("QUANTITY"*"UNIT_PRICE") VIRTUAL , 
	 PRIMARY KEY ("SALES_DETAIL_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "SALES_MASTER" 
   (	"SALES_ID" NUMBER, 
	"SALES_DATE" DATE NOT NULL ENABLE, 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	"TOTAL_AMOUNT" NUMBER(12,2) NOT NULL ENABLE, 
	"DISCOUNT_AMOUNT" NUMBER(12,2), 
	"NET_AMOUNT" NUMBER(12,2) NOT NULL ENABLE, 
	"RECIEVED_AMOUNT" NUMBER(12,2), 
	"CREATED_BY" VARCHAR2(50), 
	"CREATED_DATE" DATE DEFAULT SYSDATE, 
	 PRIMARY KEY ("SALES_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "STAT" 
   (	"STAT_ID" VARCHAR2(3), 
	"STAT_NM" VARCHAR2(50) CONSTRAINT "STAT_STAT_NM_NN" NOT NULL ENABLE, 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "STAT_STAT_ID_PK" PRIMARY KEY ("STAT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "USER_INFO" 
   (	"USER_INFO_ID" NUMBER, 
	"USER_TYPE_ID" NUMBER, 
	"FULL_NAME" VARCHAR2(50), 
	"USER_NAME" VARCHAR2(20) CONSTRAINT "USER_USER_NAME" NOT NULL ENABLE, 
	"USER_PASSWORD" VARCHAR2(30) CONSTRAINT "USER_PASSWORD" NOT NULL ENABLE, 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "USER_INFO_ID" PRIMARY KEY ("USER_INFO_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "USER_INFORMATION" 
   (	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(40), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(40), 
	"SL_NO" NUMBER(10,0), 
	"USER_ID" VARCHAR2(50), 
	"PASSWORD" VARCHAR2(10), 
	"NAME" VARCHAR2(60), 
	"EMPLOYEE_CODE" VARCHAR2(10), 
	"RESET_AFTER" DATE, 
	"LOGIN_COUNT" NUMBER(10,0), 
	 CONSTRAINT "SL_ID_PK" PRIMARY KEY ("SL_NO")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "USER_TYPE" 
   (	"USER_TYPE_ID" NUMBER, 
	"USER_TYPE_NAME" VARCHAR2(20) CONSTRAINT "USER_TYPE_NAME" NOT NULL ENABLE, 
	"ACTION_USER" VARCHAR2(20) DEFAULT USER, 
	"ACTION_DATE_TIME" DATE DEFAULT SYSDATE, 
	 CONSTRAINT "USER_TYPE_ID" PRIMARY KEY ("USER_TYPE_ID")
  USING INDEX  ENABLE
   ) ;


  CREATE UNIQUE INDEX "ACC_TYP_TYP_ID_PK" ON "ACC_TYP" ("TYP_ID") 
  ;

  CREATE UNIQUE INDEX "ACC_TYP_TYP_NM_UK" ON "ACC_TYP" ("TYP_NM") 
  ;

  CREATE UNIQUE INDEX "BANK_BNK_ID_PK" ON "BANK" ("BNK_ID") 
  ;

  CREATE UNIQUE INDEX "BRANCH_BRN_ID_PK" ON "BRANCH" ("BRN_ID") 
  ;

  CREATE UNIQUE INDEX "BRANCH_BRN_NM_UK" ON "BRANCH" ("BRN_NM") 
  ;

  CREATE UNIQUE INDEX "CHQ_DATA_CHQ_ID_PK" ON "CHQ_DATA" ("CHQ_ID") 
  ;

  CREATE UNIQUE INDEX "CHQ_PAT_PAT_ID_PK" ON "CHQ_PAT" ("PAT_ID") 
  ;

  CREATE UNIQUE INDEX "CHQ_REG_REG_ID_PK" ON "CHQ_REG" ("REG_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_COUNTRY_C_ID_PK" ON "OEHR_COUNTRIES" ("COUNTRY_ID") 
  ;

  CREATE INDEX "OEHR_COUNTRY_REGION_IX" ON "OEHR_COUNTRIES" ("REGION_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_CUSTOMERS_PK" ON "OEHR_CUSTOMERS" ("CUSTOMER_ID") 
  ;

  CREATE INDEX "OEHR_CUST_ACCOUNT_MANAGER_IX" ON "OEHR_CUSTOMERS" ("ACCOUNT_MGR_ID") 
  ;

  CREATE INDEX "OEHR_CUST_EMAIL_IX" ON "OEHR_CUSTOMERS" ("CUST_EMAIL") 
  ;

  CREATE INDEX "OEHR_CUST_LNAME_IX" ON "OEHR_CUSTOMERS" ("CUST_LAST_NAME") 
  ;

  CREATE INDEX "OEHR_CUST_UPPER_NAME_IX" ON "OEHR_CUSTOMERS" (UPPER("CUST_LAST_NAME"), UPPER("CUST_FIRST_NAME")) 
  ;

  CREATE UNIQUE INDEX "OEHR_DEPT_ID_PK" ON "OEHR_DEPARTMENTS" ("DEPARTMENT_ID") 
  ;

  CREATE INDEX "OEHR_DEPT_LOCATION_IX" ON "OEHR_DEPARTMENTS" ("LOCATION_ID") 
  ;

  CREATE INDEX "OEHR_DEPT_MANAGER_IX" ON "OEHR_DEPARTMENTS" ("MANAGER_ID") 
  ;

  CREATE INDEX "OEHR_EMP_DEPARTMENT_IX" ON "OEHR_EMPLOYEES" ("DEPARTMENT_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_EMP_EMAIL_UK" ON "OEHR_EMPLOYEES" ("EMAIL") 
  ;

  CREATE UNIQUE INDEX "OEHR_EMP_EMP_ID_PK" ON "OEHR_EMPLOYEES" ("EMPLOYEE_ID") 
  ;

  CREATE INDEX "OEHR_EMP_JOB_IX" ON "OEHR_EMPLOYEES" ("JOB_ID") 
  ;

  CREATE INDEX "OEHR_EMP_MANAGER_IX" ON "OEHR_EMPLOYEES" ("MANAGER_ID") 
  ;

  CREATE INDEX "OEHR_EMP_NAME_IX" ON "OEHR_EMPLOYEES" ("LAST_NAME", "FIRST_NAME") 
  ;

  CREATE INDEX "OEHR_INVENTORY_IX" ON "OEHR_INVENTORIES" ("WAREHOUSE_ID", "PRODUCT_ID") 
  ;

  CREATE INDEX "OEHR_INV_PRODUCT_IX" ON "OEHR_INVENTORIES" ("PRODUCT_ID") 
  ;

  CREATE INDEX "OEHR_ITEM_ORDER_IX" ON "OEHR_ORDER_ITEMS" ("ORDER_ID") 
  ;

  CREATE INDEX "OEHR_ITEM_PRODUCT_IX" ON "OEHR_ORDER_ITEMS" ("PRODUCT_ID") 
  ;

  CREATE INDEX "OEHR_JHIST_DEPARTMENT_IX" ON "OEHR_JOB_HISTORY" ("DEPARTMENT_ID") 
  ;

  CREATE INDEX "OEHR_JHIST_EMPLOYEE_IX" ON "OEHR_JOB_HISTORY" ("EMPLOYEE_ID") 
  ;

  CREATE INDEX "OEHR_JHIST_JOB_IX" ON "OEHR_JOB_HISTORY" ("JOB_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_JOB_ID_PK" ON "OEHR_JOBS" ("JOB_ID") 
  ;

  CREATE INDEX "OEHR_LOC_CITY_IX" ON "OEHR_LOCATIONS" ("CITY") 
  ;

  CREATE INDEX "OEHR_LOC_COUNTRY_IX" ON "OEHR_LOCATIONS" ("COUNTRY_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_LOC_ID_PK" ON "OEHR_LOCATIONS" ("LOCATION_ID") 
  ;

  CREATE INDEX "OEHR_LOC_STATE_PROVINCE_IX" ON "OEHR_LOCATIONS" ("STATE_PROVINCE") 
  ;

  CREATE UNIQUE INDEX "OEHR_ORDER_ITEMS_PK" ON "OEHR_ORDER_ITEMS" ("ORDER_ITEM_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_ORDER_ITEMS_UK" ON "OEHR_ORDER_ITEMS" ("ORDER_ID", "PRODUCT_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_ORDER_PK" ON "OEHR_ORDERS" ("ORDER_ID") 
  ;

  CREATE INDEX "OEHR_ORD_CUSTOMER_IX" ON "OEHR_ORDERS" ("CUSTOMER_ID") 
  ;

  CREATE INDEX "OEHR_ORD_ORDER_DATE_IX" ON "OEHR_ORDERS" (SYS_EXTRACT_UTC("ORDER_DATE")) 
  ;

  CREATE INDEX "OEHR_ORD_SALES_REP_IX" ON "OEHR_ORDERS" ("SALES_REP_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_PRODUCT_INFO_PK" ON "OEHR_PRODUCT_INFORMATION" ("PRODUCT_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_PROD_DESC_PK" ON "OEHR_PRODUCT_DESCRIPTIONS" ("PRODUCT_ID", "LANGUAGE_ID") 
  ;

  CREATE INDEX "OEHR_PROD_DESC_PROD_IX" ON "OEHR_PRODUCT_DESCRIPTIONS" ("PRODUCT_ID") 
  ;

  CREATE INDEX "OEHR_PROD_DESC_TRANSLATED_IX" ON "OEHR_PRODUCT_DESCRIPTIONS" ("TRANSLATED_NAME") 
  ;

  CREATE INDEX "OEHR_PROD_SUPPLIER_IX" ON "OEHR_PRODUCT_INFORMATION" ("SUPPLIER_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_PROMO_ID_PK" ON "OEHR_PROMOTIONS" ("PROMO_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_REG_ID_PK" ON "OEHR_REGIONS" ("REGION_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_WAREHOUSES_PK" ON "OEHR_WAREHOUSES" ("WAREHOUSE_ID") 
  ;

  CREATE INDEX "OEHR_WHS_LOCATION_IX" ON "OEHR_WAREHOUSES" ("LOCATION_ID") 
  ;

  CREATE UNIQUE INDEX "PAYE_DET_PAYE_ID_PK" ON "PAYE_DET" ("PAYE_ID") 
  ;

  CREATE UNIQUE INDEX "PURCHASE_DTL_DID_PK" ON "PURCHASE_DTL" ("PUR_ORDER_DID") 
  ;

  CREATE UNIQUE INDEX "PURCHASE_MST_PID_PK" ON "PURCHASE_MST" ("PUR_ORDER_PID") 
  ;

  CREATE UNIQUE INDEX "SL_ID_PK" ON "USER_INFORMATION" ("SL_NO") 
  ;

  CREATE UNIQUE INDEX "STAT_STAT_ID_PK" ON "STAT" ("STAT_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00182615169" ON "CUSTOMERS" ("CUSTOMER_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00182615191" ON "PRODUCTS" ("PRODUCT_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00182615196" ON "SALES_MASTER" ("SALES_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00182615204" ON "SALES_DETAILS" ("SALES_DETAIL_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_IL0317736792C00012$$" ON "OEHR_EMPLOYEES" (
  ;

  CREATE UNIQUE INDEX "USER_INFO_ID" ON "USER_INFO" ("USER_INFO_ID") 
  ;

  CREATE UNIQUE INDEX "USER_TYPE_ID" ON "USER_TYPE" ("USER_TYPE_ID") 
  ;



   CREATE SEQUENCE  "COMSMS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "EMPSMS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "SEQ_SALES_DETAILS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "SEQ_SALES_MASTER"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1041 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;



  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_ACCOUNT_MANAGERS" ("ACCT_MGR", "REGION", "COUNTRY", "PROVINCE", "NUM_CUSTOMERS") AS 
  select    c.account_mgr_id    acct_mgr,
    cr.region_id      region, 
    c.country_id                  country,
    c.state_province          province, 
    count(*)      num_customers
from    oehr_customers c, oehr_countries cr
where   c.country_id = cr.country_id
group by rollup (  c.account_mgr_id
                 , cr.region_id
                 , c.country_id
                 , c.state_province
                );

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_BOMBAY_INVENTORY" ("PRODUCT_ID", "PRODUCT_NAME", "QUANTITY_ON_HAND") AS 
  select p.product_id
,      p.product_name
,      i.quantity_on_hand
from   oehr_inventories i
,      oehr_warehouses  w
,      oehr_products    p   
where  p.product_id = i.product_id
and    i.warehouse_id = w.warehouse_id
and    w.warehouse_name = 'Bombay';

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_CUSTOMERS_VIEW" ("CUSTOMER_ID", "CUST_FIRST_NAME", "CUST_LAST_NAME", "STREET_ADDRESS", "POSTAL_CODE", "CITY", "STATE_PROVINCE", "COUNTRY_ID", "COUNTRY_NAME", "REGION_ID", "NLS_LANGUAGE", "NLS_TERRITORY", "CREDIT_LIMIT", "CUST_EMAIL", "PHONE_NUMBER", "ACCOUNT_MGR_ID") AS 
  select 
  c.customer_id,
  c.cust_first_name,
  c.cust_last_name,
  c.street_address,
  c.postal_code,
  c.city,
  c.state_province,
  co.country_id,
  co.country_name,
  co.region_id,
  c.nls_language,
  c.nls_territory,
  c.credit_limit,
  c.cust_email,
  c.phone_number,
  c.account_mgr_id
from 
  oehr_countries co,
  oehr_customers c
where 
  c.country_id = co.country_id(+);

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_EMP_DETAILS_VIEW" ("EMPLOYEE_ID", "JOB_ID", "MANAGER_ID", "DEPARTMENT_ID", "LOCATION_ID", "COUNTRY_ID", "FIRST_NAME", "LAST_NAME", "SALARY", "COMMISSION_PCT", "DEPARTMENT_NAME", "JOB_TITLE", "CITY", "STATE_PROVINCE", "COUNTRY_NAME", "REGION_NAME") AS 
  select
  e.employee_id, 
  e.job_id, 
  e.manager_id, 
  e.department_id,
  d.location_id,
  l.country_id,
  e.first_name,
  e.last_name,
  e.salary,
  e.commission_pct,
  d.department_name,
  j.job_title,
  l.city,
  l.state_province,
  c.country_name,
  r.region_name
from
  oehr_employees e,
  oehr_departments d,
  oehr_jobs j,
  oehr_locations l,
  oehr_countries c,
  oehr_regions r
where e.department_id = d.department_id
  and d.location_id = l.location_id
  and l.country_id = c.country_id
  and c.region_id = r.region_id
  and j.job_id = e.job_id 
with read only;

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_ORDERS_VIEW" ("ORDER_ID", "ORDER_DATE", "ORDER_MODE", "CUSTOMER_ID", "ORDER_STATUS", "ORDER_TOTAL", "SALES_REP_ID", "PROMOTION_ID") AS 
  select order_id,
  to_date(to_char(order_date,'DD-MON-YY HH:MI:SS'),'DD-MON-YY HH:MI:SS')    order_date,
order_mode,
customer_id,
order_status,
order_total,
sales_rep_id,
promotion_id
from oehr_orders;

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_PRODUCTS" ("PRODUCT_ID", "LANGUAGE_ID", "PRODUCT_NAME", "CATEGORY_ID", "PRODUCT_DESCRIPTION", "WEIGHT_CLASS", "WARRANTY_PERIOD", "SUPPLIER_ID", "PRODUCT_STATUS", "LIST_PRICE", "MIN_PRICE", "CATALOG_URL") AS 
  select i.product_id
,      d.language_id
,      case when d.language_id is not null
            then d.translated_name
            else translate(i.product_name using nchar_cs)
       end    as product_name
,      i.category_id
,      case when d.language_id is not null
            then d.translated_description
            else translate(i.product_description using nchar_cs)
       end    as product_description
,      i.weight_class
,      i.warranty_period
,      i.supplier_id
,      i.product_status
,      i.list_price
,      i.min_price
,      i.catalog_url
from   oehr_product_information  i
,      oehr_product_descriptions d
where  d.product_id  (+) = i.product_id
and    d.language_id (+) = sys_context('USERENV','LANG');

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_PRODUCT_PRICES" ("CATEGORY_ID", "#_OF_PRODUCTS", "LOW_PRICE", "HIGH_PRICE") AS 
  select category_id
,      count(*)        as "#_OF_PRODUCTS"
,      min(list_price) as low_price
,      max(list_price) as high_price
from   oehr_product_information
group by category_id;

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_SYDNEY_INVENTORY" ("PRODUCT_ID", "PRODUCT_NAME", "QUANTITY_ON_HAND") AS 
  select p.product_id
,      p.product_name
,      i.quantity_on_hand
from   oehr_inventories i
,      oehr_warehouses  w
,      oehr_products    p  
where  p.product_id = i.product_id
and    i.warehouse_id = w.warehouse_id
and    w.warehouse_name = 'Sydney';

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OEHR_TORONTO_INVENTORY" ("PRODUCT_ID", "PRODUCT_NAME", "QUANTITY_ON_HAND") AS 
  select p.product_id
,      p.product_name
,      i.quantity_on_hand
from   oehr_inventories i
,      oehr_warehouses  w
,      oehr_products    p   
where  p.product_id = i.product_id
and    i.warehouse_id = w.warehouse_id
and    w.warehouse_name = 'Toronto';

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "VW_CHQ_DATA" ("CHQ_ID", "BNK_ID", "BANK_NAME", "CHQ_DT", "CHQ_NO", "PAYE_ID", "PAYEE_NAME", "AMT", "PAT_ID", "PATTERN_NAME", "STAT_ID", "STATUS_NAME", "ACTION_USER", "ACTION_DATE_TIME") AS 
  SELECT  
    CD.CHQ_ID, 
    CD.BNK_ID, 
    B.BNK_NM AS BANK_NAME, 
    CD.CHQ_DT, 
    CD.CHQ_NO, 
    CD.PAYE_ID, 
    PD.PAYE_NM AS PAYEE_NAME, 
    CD.AMT, 
    CD.PAT_ID, 
    CP.PAT_NM AS PATTERN_NAME, 
    CD.STAT_ID, 
    S.STAT_NM AS STATUS_NAME, 
    CD.ACTION_USER, 
    CD.ACTION_DATE_TIME 
FROM  
    CHQ_DATA CD 
    LEFT JOIN BANK B ON CD.BNK_ID = B.BNK_ID 
    LEFT JOIN PAYE_DET PD ON CD.PAYE_ID = PD.PAYE_ID 
    LEFT JOIN CHQ_PAT CP ON CD.PAT_ID = CP.PAT_ID 
    LEFT JOIN STAT S ON CD.STAT_ID = S.STAT_ID;




